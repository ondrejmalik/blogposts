@page "/"
@using MySqlConnector
@using BCrypt.Net
@inject NavigationManager NavigationManager
<PageTitle>Index</PageTitle>
@{ Credentials.firstTime = true; }

<div id="loginContainer">
    <form id="loginForm">
        <div class="form-floating">
            <input type="text" id="username" name="username" class="form-control" placeholder="username" @bind="Credentials.username">
            <label for="username">Username</label>
        </div>
        <div class="form-floating">
            <input type="password" id="password" name="password" class="form-control" placeholder="password" @bind="Credentials.password">
            <label for="password">Password</label>
        </div>
    </form>
    <div id="buttons">
        <button type="button" value="Login" @onclick="Login" class="btn btn-primary btn-lg px-4 gap-3">Login</button>
        <button type="button" value="Register" @onclick="Register" class="btn btn-primary btn-lg px-4 gap-3">Register</button>
    </div>
</div>
<h1 id="debugstr">@debugstr</h1>
<style>
body{
margin: 0px;
padding: 0px;
background-color: #1b1a1f;
}
page{
margin: 0px;
padding: 0px;
}
    #loginContainer {
        position: absolute;
         top: 150px;
         left: 50%;
         transform: translate(-50%);
        background: #20202a;
        padding: 20px;
        border-radius: 20px;
    }
    #loginForm{
        margin: 10px;
        
    }
    #buttons{
            margin: 10px;
            margin-top: 40px;
    }
    #debugstr{
    margin: auto;
    position: relative;
    text-align: center;
    color: sandybrown;
    }
    #switch-container {
    width : 60px;
    height : 34px;
    top: 0;
    display: inline-block;
    margin: 10px;
    }
</style>
<script>
document.onload = checkLocalStorageValue();
function switchMode() {
        var savedValue = localStorage.getItem('theme');
        var element = document.body;
        var element2 = document.getElementById("loginContainer");
        if (savedValue === 'light-mode') {
          localStorage.setItem('theme', 'dark-mode');
        } else {
          localStorage.setItem('theme', 'light-mode');
        }
        element.classList.toggle("dark-mode");
        element2.classList.toggle("dark-mode");
    }
    function checkLocalStorageValue() {
      var savedValue = localStorage.getItem('theme');
      var checkbox = document.getElementById('darkModeSwitchCheckbox');
          
      if (savedValue === 'dark-mode') {
      var element = document.body;
      var element2 = document.getElementById("loginContainer");
      if (element.classList.contains("dark-mode")) {
              element2.classList.toggle("dark-mode");
            }
      else {
              element.classList.toggle("dark-mode");
            }
      checkbox.checked = true;
      } else {
        console.log('Dark mode is not enabled.');
        // Perform actions for default mode
      }
    }
</script>
@code
{
    private string debugstr;
    private IBrowserFile selectedFile;
    private string[] images;
    private string connectionString = "Server=sql11.freemysqlhosting.net;Database=sql11656637;User ID=sql11656637;Password=CW5jKPFzBs;";
    private void Login()
    {
        debugstr = "Attempting to login...";
        List<string> usernameList = new List<string>();
        List<string> passwordList = new List<string>();
        
        using (MySqlConnection connection = new MySqlConnection(connectionString))
        {
            connection.Open();
            MySqlCommand command = new MySqlCommand("SELECT * FROM credentials", connection);

            using (MySqlDataReader reader = command.ExecuteReader())
            {
                int i = 0;
                while (reader.Read())
                {
                    usernameList.Add(reader["username"].ToString());
                    passwordList.Add(reader["password"].ToString());
                    i++;
                }
            }

            usernameIndex(usernameList, passwordList);
            connection.Close();
        }
    }

    private void Register()
    {
        debugstr = "";
        try
        {
            using (MySqlConnection connection = new MySqlConnection(connectionString))
            {
                connection.Open();
                string query = "INSERT INTO credentials (username, password) VALUES (@username, @password)";
                MySqlCommand command = new MySqlCommand(query, connection);
                command.Parameters.AddWithValue("@username", Credentials.username);
                command.Parameters.AddWithValue("@password", BCrypt.HashPassword(Credentials.password));
                command.ExecuteNonQuery();
                debugstr = "Registration successful";
                connection.Close();
            }
        }
        catch (Exception e)
        {
            debugstr = "Registration failed. \r\n" + " Error: " + e.Message.ToString();
        }
    }


    private void usernameIndex(List<string> usernameList, List<string> passwordList)
    {
        int i = 0;
        foreach (string s in usernameList)
        {
            if (Credentials.username == s)
            {
                passwordCheck(passwordList, i);
                return;
            }
            i++;
        }
        debugstr = "Username not found";
    }

    private void passwordCheck(List<string> passwordList, int index)
    {
        if (BCrypt.Verify(Credentials.password, passwordList[index]))
        {
            debugstr = "Password correct";
            Credentials.loggedIn = true;
            NavigationManager.NavigateTo("/blogWindows");
        }
        else
        {
            debugstr = "Password incorrect";
        }
    }
}